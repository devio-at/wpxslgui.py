<?xml version="1.0" ?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"
			xmlns:content="http://purl.org/rss/1.0/modules/content/"
			xmlns:wp="http://wordpress.org/export/1.2/" >
	<xsl:output method="html" doctype-public="-//W3C//DTD XHTML 1.0 Transitional//EN" doctype-system="http://www.w3.org/tr/xhtml1/DTD/xhtml1-transitional.dtd" 
		omit-xml-declaration="yes" media-type="text/html" />

  <xsl:key name="categories" match="/rss/channel/item/category[@domain='category']" use="@nicename" />
  
	<xsl:template match="/rss/channel">
		<html>
			<head>
				<title>
					<xsl:value-of select="title"/> -
					<xsl:value-of select="description"/>
				</title>
				<style type="text/css">
* { font-family: Arial, Sans-Serif; }
body { font-size: smaller; }

.items { margin-left: 1em; }

.h2 { color: blue; }

table.main { width: 100%; }
table.main tr { vertical-align: top; }
				</style>
				<script type="text/javascript">
function clearButtons()
{
	var g = document.getElementById("categories");
	var i;
	for(i=0; i &lt; g.childNodes.length; i++) { g.childNodes[i].checked = false; }
}
function clickButton(category)
{
	var g = document.getElementById("items");
	var i, ii;
	for(i=0; i &lt; g.childNodes.length; i++) 
	{
	  var b = false;
		var item = g.childNodes[i];
		var divcats;
		//if (!confirm(item)) return;
		for(ii=0; ii &lt; item.childNodes.length; ii++)
		{
			if (item.childNodes[ii].className == "categories")
			  divcats = item.childNodes[ii];
		}
	  //var divcats = item.childNodes[3];
		//if (!confirm(divcats)) return;
		if (divcats)
		{
			for(ii=0; ii &lt; divcats.childNodes.length; ii++)
			{
			  //if (!confirm(divcats.childNodes[ii])) return;
			  //if (!confirm(divcats.childNodes[ii].className)) return;
				
				if (divcats.childNodes[ii].className == category)
				{
					b = true;
				}
			}
			if (item.style)
			{
				item.style.display = b ? "inline" : "none";
			}
		}
	}
}
				</script>
			</head>
			<body>
				<a target="_blank">
					<xsl:attribute name="href">
						<xsl:value-of select="link"/>
					</xsl:attribute>
					<h3>
						<xsl:value-of select="title"/>
						<br />
						<xsl:value-of select="description"/>
					</h3>
				</a>
				<p />
				<table class="main">
					<tr>
						<td width="20%">
							<div id="categories">
                <!-- xsl:apply-templates select="wp:category"></xsl:apply-templates -->
                <xsl:apply-templates select="item[wp:post_type = 'post' and wp:status = 'publish']/category" mode="radio" >
                  <xsl:sort order="ascending" select="text()"/>
                </xsl:apply-templates>
							</div>
							<br />
							<!--input type="button" onclick="clearButtons()" value="Clear"></input-->
							<br />
							<i>
								generated by <a href="https://www.devio.at/en/projects/wpxslgui/" target="_blank">devio wpxslgui</a>
							</i>
						</td>
						<td width="80%">
							<div id="items" class="items">
								<xsl:apply-templates select="item[wp:post_type = 'post' and wp:status = 'publish']"></xsl:apply-templates>
							</div>
						</td>
					</tr>
				</table>
				<p />
			</body>
		</html>
	</xsl:template>

  <xsl:template match=
  "item[wp:post_type = 'post' and wp:status = 'publish']/category
       [ generate-id() = generate-id(key('categories', @nicename)[1]) ]" mode="radio">
    
    <!--[[<xsl:value-of select="text()"/>]]
    <xsl:text>&#xA;</xsl:text>-->

    <input type="radio" name="category">
      <xsl:attribute name="id">category_<xsl:value-of select="@nicename"/></xsl:attribute>
      <xsl:attribute name="value"><xsl:value-of select="@nicename"/></xsl:attribute>
      <xsl:attribute name="onclick">clickButton('<xsl:value-of select="@nicename"/>')</xsl:attribute>
    </input>
    <label>
      <xsl:attribute name="for">category_<xsl:value-of select="@nicename"/></xsl:attribute>
      <xsl:value-of select="text()"/>
    </label>
    <br />
    <xsl:text>&#xA;</xsl:text>
  </xsl:template>

  <xsl:template match="text()" mode="radio"></xsl:template>
  
  <xsl:template match="wp:category">
		<input type="radio" name="category">
			<xsl:attribute name="id">category_<xsl:value-of select="wp:category_nicename"/></xsl:attribute>
			<xsl:attribute name="value">
				<xsl:value-of select="wp:category_nicename"/>
			</xsl:attribute>
			<xsl:attribute name="onclick">clickButton('<xsl:value-of select="wp:category_nicename"/>')</xsl:attribute>
		</input>
		<label>
			<xsl:attribute name="for">category_<xsl:value-of select="wp:category_nicename"/></xsl:attribute>
			<xsl:value-of select="wp:cat_name"/>
		</label>
		<br />
	</xsl:template>
	
	<xsl:template match="item" >
		<div class="h2h">
			<div class="h2" >
				<a target="_blank">
					<xsl:attribute name="href">
						<xsl:value-of select="link"/>
					</xsl:attribute>
					<xsl:value-of select="title"/>
				</a>
			</div>
			<div class="categories">
				<xsl:value-of select="wp:post_date"></xsl:value-of>
				<xsl:text> </xsl:text>
				<xsl:apply-templates select="category"></xsl:apply-templates>
			</div>
			<br />
		</div>
	</xsl:template>

	<xsl:template name="category" match="category">
		<xsl:if test="@nicename!=''">
			<xsl:text> </xsl:text>
			<span>
				<xsl:attribute name="class">
					<xsl:value-of select="@nicename"/>
				</xsl:attribute>
				<xsl:value-of select="." />
			</span>
		</xsl:if>
	</xsl:template>

	<xsl:template name="break">
		<xsl:param name="text" select="content:encoded"/>
		<xsl:choose>
			<xsl:when test="contains($text, '&#xa;')">
				<xsl:value-of select="substring-before($text, '&#xa;')"  disable-output-escaping="yes"/>
				<br/>
				<xsl:call-template name="break">
					<xsl:with-param name="text" select="substring-after($text,
'&#xa;')"/>
				</xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$text"  disable-output-escaping="yes"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

</xsl:stylesheet>